What is a decorator in Python?

A decorator is a function that takes another function as an argument and 
extends or modifies its behavior without modifying its actual code.

def my_decorator(func):
    def wrapper():
        print("Something is happening before the function is called.")
        func()
        print("Something is happening after the function is called.")
    return wrapper

@my_decorator
def say_hello():
    print("Hello!")

say_hello()


Output 
Something is happening before the function is called.
Hello!
Something is happening after the function is called.
